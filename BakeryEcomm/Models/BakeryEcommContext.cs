// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace BakeryEcomm.Models;

public partial class BakeryEcommContext : DbContext
{
    public BakeryEcommContext(DbContextOptions<BakeryEcommContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Bakery_Item> Bakery_Items { get; set; }

    public virtual DbSet<Card_Info> Card_Infos { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<Drink_Addon> Drink_Addons { get; set; }

    public virtual DbSet<Order_Header> Order_Headers { get; set; }

    public virtual DbSet<Order_Line> Order_Lines { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=LAPTOP-5CNT3UQE;Database=BakeryEcomm;Integrated Security=True;Encrypt=True;TrustServerCertificate=True");


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Bakery_Item>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Card_Info>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Customer).WithMany(p => p.Card_Infos)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Card_Info_Customer");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
        });

        modelBuilder.Entity<Drink_Addon>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Addons");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Name).IsFixedLength();
        });

        modelBuilder.Entity<Order_Header>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Timestamp)
                .IsRowVersion()
                .IsConcurrencyToken();

            entity.HasOne(d => d.Card).WithMany(p => p.Order_Headers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Header_Card_Info");

            entity.HasOne(d => d.Customer).WithMany(p => p.Order_Headers)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Header_Customer");
        });

        modelBuilder.Entity<Order_Line>(entity =>
        {
            entity.Property(e => e.Id).ValueGeneratedNever();

            entity.HasOne(d => d.Item).WithMany(p => p.Order_Lines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Line_Bakery_Items");

            entity.HasOne(d => d.ItemNavigation).WithMany(p => p.Order_Lines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Line_Drink_Addons");

            entity.HasOne(d => d.Order_Header).WithMany(p => p.Order_Lines)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Order_Line_Order_Header");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}